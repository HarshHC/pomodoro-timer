{"version":3,"sources":["Constants/themes.js","components/Header/ImageSearchDrawer.js","components/Header/BackgroundOptions.js","components/Header/ColourSelector.js","Constants/firebase.js","Constants/firebaseUtils.js","components/Header/SideDrawer.js","components/Header/index.js","components/Tasks/TodoForm.js","components/Tasks/TodoItem.js","components/Tasks/TodoList.js","components/Tasks/index.js","Constants/modes.js","Constants/utils.js","components/Timer/RunningTimer.js","components/Timer/utilities.js","components/Timer/MinSetter.js","components/Timer/TimerEditMode.js","components/Timer/index.js","App.js","reportWebVitals.js","index.js"],"names":["generateGradientTheme","color","colorMode","bg","image","random","custom_url","name","theme","startColor","darkColor1","lightColor1","endColor","darkColor2","lightColor2","bgImage","bgInfo","location","random_url","styles","textColor","_hover","hover","bgGradient","reverse","bgNoHover","imageModeContrastText","textShadow","imageModeContrastBg","FONT_FAMILY","saveThemeToStorage","newTheme","window","localStorage","setItem","JSON","stringify","toggleBackgroundImageInGradientTheme","oldTheme","PURPLE","baseColor","themesList","ImageSearchDrawer","props","useState","searchInput","setSearchInput","photosResponse","setPhotosResponse","searchClicked","setSearchClicked","useMediaQuery","isOnmobile","toast","useToast","config","unsplash","createApi","accessKey","process","searchUnsplash","searchFor","search","getPhotos","query","orientation","per_page","then","result","catch","useEffect","isOpen","images","m","w","h","response","flexWrap","flexDir","results","map","photo","borderRadius","src","urls","regular","alt","alt_description","onClick","url","setGradientThemeImageCustomUrl","setTheme","title","description","status","duration","id","onClose","size","placement","justify","align","fontFamily","fontSize","letterSpacing","ml","fontWeight","href","isExternal","variant","mr","onSubmit","e","preventDefault","mx","pr","value","onChange","target","borderRight","placeholder","type","minW","leftIcon","Search2","BackgroundOptions","useDisclosure","onOpen","isPremium","flex","my","Lock","mb","width","isDisabled","colorScheme","isChecked","toggleRandomImageInGradientTheme","p","ColourSelector","showLock","mt","maxW","item","i","label","toUpperCase","rounded","changeGradientThemeColorTo","isClosable","uuid","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","db","firestore","checkIfUserAlreadyExists","analytics","firebaseui","AuthUI","user","collection","doc","uid","get","exists","set","console","log","error","createUserInDB","SideDrawer","btnText","setBtnText","currentUser","setCurrentUser","setValue","isUserSignedIn","onAuthStateChanged","handleResult","processPayment","a","PRICE_ID","loadStripe","stripe","priceId","fetch","method","headers","body","email","json","data","redirectToCheckout","sessionId","themeDrawer","letiant","settingsDrawer","justifyContent","displayName","split","Star","signOut","signInWithRedirect","signInWithPopup","finalFocusRef","btnRef","mode","blockScrollOnMount","direction","Header","useColorMode","toggleColorMode","setMode","React","useRef","icon","Moon","Sun","fill","TodoForm","edit","input","setInput","taskOption","spacing","border","borderColor","_placeholder","as","py","textAlign","borderLeft","className","Math","floor","text","columnID","TodoItem","updateMode","setUpdateMode","todo","inputRef","current","focus","updateTodoMode","provided","draggableProps","dragHandleProps","ref","innerRef","key","index","overflow","updateTodo","Check","boxSize","defaultTodoMode","Delete","removeTodo","Edit","TodoList","setEdit","todos","draggableId","Tasks","getItem","parse","newTasks","completedTasks","setTodos","newValue","test","newTodos","items","splice","desktopTodos","onDragEnd","destination","start","source","droppableId","finish","reorder","sourceList","removed","destinationList","flexDirection","droppableProps","minH","SESSION","BREAK","isPermissionGranted","Notification","permission","RunningTimer","seconds","setSeconds","sessionMins","breakMins","mins","setMins","timeProps","updatedTime","setUpdatedTime","time","timerProps","updatedStart","setUpdatedStart","started","isRunning","countdownHandler","undefined","clickCallback","message","sendNotification","notification","onclick","close","requestPermission","createNotification","startTimer","startingMins","setInterval","interval","clearInterval","height","alignItems","centerContent","bgClip","validateMins","setSessionMins","maxSessionMins","MinSetter","Button","maxVal","Add","defaultValue","defaultMins","val","parseInt","Number","isNaN","Minus","TimerEditMode","maxBreakMins","setBreakMins","Timer","displayedTimer","setStarted","setIsRunning","initialFocusRef","timerProp","startClicked","buttonWithPopOver","closeOnBlur","pt","d","pb","boxShadow","App","setIsPremium","timerTheme","setTimerTheme","isUserPremium","validationFunction","checkIfUserIsPremium","storedTheme","content","noBgImage","withBgRandomImage","_before","bgAttachment","bgSize","bgRepeat","left","position","top","willChange","zIndex","withBgCustomImage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","extendTheme","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef6119f8.chunk.js","sourcesContent":["export const generateGradientTheme = (\n  color,\n  colorMode,\n  bg = { image: false, random: true, custom_url: '' },\n  name = ''\n) => {\n  const theme = {\n    color,\n    colorMode,\n    name: name === '' ? color.name : name,\n    startColor: colorMode === 'dark' ? color.darkColor1 : color.lightColor1,\n    endColor: colorMode === 'dark' ? color.darkColor2 : color.lightColor2,\n    bgImage: bg.image,\n    bgInfo: {\n      location: 'online',\n      random_url: `https://source.unsplash.com/1600x900/?background,scenery,${color.name}`,\n      custom_url: bg.custom_url,\n      random: bg.random != null ? bg.random : true\n    },\n    styles: {\n      bg: {\n        color: color.textColor,\n        _hover: { bg: color.hover },\n        bgGradient:\n          colorMode === 'light'\n            ? `linear(to-bl,${color.lightColor1},${color.lightColor2})`\n            : `linear(to-bl,${color.darkColor1},${color.darkColor2})`,\n        reverse: {\n          color: color.textColor,\n          _hover: { bg: color.hover },\n          bgGradient:\n            colorMode === 'light'\n              ? `linear(to-r,${color.lightColor1},${color.lightColor2})`\n              : `linear(to-r,${color.darkColor1},${color.darkColor2})`\n        }\n      },\n      bgNoHover: {\n        color: color.textColor,\n        bgGradient:\n          colorMode === 'light'\n            ? `linear(to-bl,${color.lightColor1},${color.lightColor2})`\n            : `linear(to-bl,${color.darkColor1},${color.darkColor2})`\n      },\n      imageModeContrastText:\n        colorMode === 'dark'\n          ? {\n              textShadow:\n                '5px 5px 20px black, -5px -5px 20px black,-5px 5px 50px black'\n            }\n          : {\n              textShadow:\n                '5px 5px 20px white, -5px -5px 20px white,-5px 5px 50px white'\n            },\n      imageModeContrastBg:\n        colorMode === 'dark'\n          ? {\n              bg: 'rgba(0, 0, 0, 0.5)'\n            }\n          : {\n              bg: 'rgba(255, 255, 255, 0.2)'\n            }\n    }\n  };\n  return theme;\n};\n\nexport const FONT_FAMILY = 'Teko, sans-serif';\n\nexport const saveThemeToStorage = newTheme => {\n  window.localStorage.setItem('timer-theme', JSON.stringify(newTheme));\n};\n\nexport const changeGradientThemeColorTo = (oldTheme, color) => {\n  const newTheme = generateGradientTheme(color, oldTheme.colorMode, {\n    image: oldTheme.bgImage,\n    random: oldTheme.bgInfo.random,\n    custom_url: oldTheme.bgInfo.custom_url\n  });\n  saveThemeToStorage(newTheme);\n  return newTheme;\n};\n\nexport const toggleBackgroundImageInGradientTheme = oldTheme => {\n  const newTheme = generateGradientTheme(oldTheme.color, oldTheme.colorMode, {\n    image: !oldTheme.bgImage,\n    random: oldTheme.bgInfo.random,\n    custom_url: oldTheme.bgInfo.custom_url\n  });\n  saveThemeToStorage(newTheme);\n  return newTheme;\n};\n\nexport const toggleRandomImageInGradientTheme = oldTheme => {\n  const newTheme = generateGradientTheme(oldTheme.color, oldTheme.colorMode, {\n    image: oldTheme.bgImage,\n    random: !oldTheme.bgInfo.random,\n    custom_url: oldTheme.bgInfo.custom_url\n  });\n  saveThemeToStorage(newTheme);\n  return newTheme;\n};\n\nexport const setGradientThemeImageCustomUrl = (oldTheme, url) => {\n  const newTheme = generateGradientTheme(oldTheme.color, oldTheme.colorMode, {\n    image: oldTheme.bgImage,\n    random: oldTheme.bgInfo.random,\n    custom_url: url\n  });\n  saveThemeToStorage(newTheme);\n  return newTheme;\n};\n\nexport const BLUE = {\n  name: 'blue',\n  baseColor: 'blue.500',\n  lightColor1: '#149fff',\n  lightColor2: '#117aff',\n  darkColor1: '#149fff',\n  darkColor2: '#117aff',\n  hover: 'blue.600',\n  textColor: 'white'\n};\n\nexport const PURPLE = {\n  name: 'purple',\n  baseColor: '#9b00fa',\n  lightColor1: '#5d0cff',\n  lightColor2: '#9b00fa',\n  darkColor1: '#5d0cff',\n  darkColor2: '#9b00fa',\n  hover: '#5d0cff',\n  textColor: 'white'\n};\n\nexport const ORANGE = {\n  name: 'orange',\n  baseColor: 'orange.500',\n  lightColor1: '#F98745',\n  lightColor2: '#FC6952',\n  darkColor1: '#F98745',\n  darkColor2: '#FC6952',\n  hover: '#e56a39',\n  textColor: 'white'\n};\n\nexport const RED = {\n  name: 'red',\n  baseColor: 'red.500',\n  lightColor1: '#F22E44',\n  lightColor2: '#CE263B',\n  darkColor1: '#F22E44',\n  darkColor2: '#CE263B',\n  hover: '#D43A5A',\n  textColor: 'white'\n};\n\nexport const GREEN = {\n  name: 'green',\n  baseColor: 'lime',\n  lightColor1: '#9AF945',\n  lightColor2: '#65F883',\n  darkColor1: '#9AF945',\n  darkColor2: '#65F883',\n  hover: 'lime',\n  textColor: 'black'\n};\n\nexport const YELLOW = {\n  name: 'yellow',\n  baseColor: 'yellow',\n  lightColor1: '#FECE52',\n  lightColor2: '#FDA714',\n  darkColor1: '#FECE52',\n  darkColor2: '#FDA714',\n  hover: '#FFCC30',\n  textColor: 'black'\n};\n\nexport const BABY_BLUE = {\n  name: 'baby blue',\n  baseColor: '#77C3EC',\n  lightColor1: '#77C3EC',\n  lightColor2: '#9DD9FE',\n  darkColor1: '#77C3EC',\n  darkColor2: '#9DD9FE',\n  hover: '#00DBFF',\n  textColor: 'black'\n};\n\nexport const PINK = {\n  name: 'pink',\n  baseColor: '#FA5181',\n  lightColor1: '#FA5181',\n  lightColor2: '#FF82AC',\n  darkColor1: '#FA5181',\n  darkColor2: '#FF82AC',\n  hover: '#D24986',\n  textColor: 'black'\n};\n\nexport const themesList = [\n  BLUE,\n  PURPLE,\n  ORANGE,\n  RED,\n  GREEN,\n  YELLOW,\n  BABY_BLUE,\n  PINK\n];\n","import React, { useEffect, useState } from 'react';\nimport { createApi } from 'unsplash-js';\nimport {\n  Box,\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n  Flex,\n  Image,\n  Input,\n  Link,\n  Skeleton,\n  Text,\n  useMediaQuery,\n  useToast\n} from '@chakra-ui/react';\nimport { Search2Icon } from '@chakra-ui/icons';\nimport { config } from 'dotenv';\nimport {\n  FONT_FAMILY,\n  setGradientThemeImageCustomUrl\n} from '../../Constants/themes';\n\nfunction ImageSearchDrawer(props) {\n  const [searchInput, setSearchInput] = useState('nature background');\n  const [photosResponse, setPhotosResponse] = useState(null);\n  const [searchClicked, setSearchClicked] = useState(false);\n  const [isOnmobile] = useMediaQuery('(max-width: 768px)');\n  const toast = useToast();\n\n  config();\n\n  const unsplash = createApi({\n    accessKey: process.env.REACT_APP_API_KEY\n  });\n\n  const searchUnsplash = searchFor => {\n    unsplash.search\n      .getPhotos({\n        query: searchFor,\n        orientation: isOnmobile ? 'portrait' : 'landscape',\n        per_page: 30\n      })\n      .then(result => {\n        if (result != null) {\n          setPhotosResponse(result);\n        }\n        // console.log(result);\n      })\n      .catch(() => {\n        // console.log('something went wrong!');\n      });\n  };\n  useEffect(() => {\n    if (!props.theme.bgInfo.random && props.theme.bgImage && props.isOpen) {\n      searchUnsplash('nature background');\n    }\n  }, [props.theme.bgInfo.random, props.theme.bgImage, props.isOpen]);\n\n  const handleSearch = () => {\n    searchUnsplash(searchInput);\n  };\n\n  let images = (\n    <Flex>\n      {searchClicked ? (\n        <Skeleton m=\"4\" w=\"100%\" h=\"100%\" />\n      ) : (\n        <Flex m=\"4\" w=\"100%\" h=\"100%\" />\n      )}\n    </Flex>\n  );\n  if (photosResponse != null && photosResponse.response != null) {\n    images = (\n      <Flex m=\"4\" w=\"100%\" h=\"90%\" flexWrap=\"wrap\" flexDir=\"row\">\n        {photosResponse.response.results.map(photo => (\n          <Box key={photo.id} m=\"2\" w={isOnmobile ? '28%' : '25%'}>\n            <Image\n              w=\"100%\"\n              h={isOnmobile ? '200px' : '100px'}\n              borderRadius=\"4px\"\n              src={photo.urls.regular}\n              alt={photo.alt_description}\n              onClick={() => {\n                const newTheme = setGradientThemeImageCustomUrl(\n                  props.theme,\n                  photo.urls.regular\n                );\n                props.setTheme(newTheme);\n                toast({\n                  title: 'Background changed!',\n                  description:\n                    'Close the image search drawer to see your changes',\n                  status: 'success',\n                  duration: 500\n                });\n              }}\n            />\n          </Box>\n        ))}\n      </Flex>\n    );\n  }\n\n  return (\n    <Drawer\n      onClose={props.onClose}\n      isOpen={props.isOpen}\n      size={isOnmobile ? 'sm' : 'lg'}\n      placement=\"right\">\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerHeader>\n            <Flex justify=\"space-between\" w=\"100%\" align=\"center\">\n              <Flex flexDir=\"column\">\n                <Text\n                  fontFamily={FONT_FAMILY}\n                  fontSize=\"2xl\"\n                  letterSpacing=\"wide\"\n                  ml=\"4\"\n                  fontWeight=\"bold\">\n                  Choose Background Image\n                </Text>\n                <Text ml=\"4\" fontSize=\"sm\">\n                  Images from{' '}\n                  <Link\n                    color=\"teal.500\"\n                    href=\"https://www.unsplash.com\"\n                    isExternal>\n                    Unsplash.com\n                  </Link>\n                </Text>\n              </Flex>\n              <Button variant=\"outline\" mr=\"1\" onClick={props.onClose}>\n                Done\n              </Button>\n            </Flex>\n          </DrawerHeader>\n          <DrawerBody>\n            <form\n              onSubmit={e => {\n                e.preventDefault();\n                handleSearch();\n              }}>\n              <Flex mx=\"2\" w=\"98%\">\n                <Input\n                  w=\"100%\"\n                  pr=\"1vw\"\n                  value={searchInput}\n                  fontFamily={FONT_FAMILY}\n                  fontSize=\"xl\"\n                  letterSpacing=\"wider\"\n                  onChange={e => {\n                    setSearchInput(e.target.value);\n                  }}\n                  variant=\"outline\"\n                  borderRight=\"0px\"\n                  borderRadius=\"4px 0px 0px 4px\"\n                  placeholder=\"Search Images\"\n                />\n                <Button\n                  size=\"md\"\n                  type=\"submit\"\n                  minW=\"max-content\"\n                  fontFamily={FONT_FAMILY}\n                  fontSize=\"xl\"\n                  letterSpacing=\"wider\"\n                  borderRadius=\"0px 4px 4px 0px\"\n                  leftIcon={<Search2Icon />}\n                  onClick={() => setSearchClicked(true)}>\n                  SEARCH\n                </Button>\n              </Flex>\n            </form>\n\n            {images}\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n}\n\nexport default ImageSearchDrawer;\n","import { LockIcon, Search2Icon } from '@chakra-ui/icons';\nimport { Button, Flex, Switch, Text, useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\nimport {\n  FONT_FAMILY,\n  toggleBackgroundImageInGradientTheme,\n  toggleRandomImageInGradientTheme\n} from '../../Constants/themes';\nimport ImageSearchDrawer from './ImageSearchDrawer';\n\nfunction BackgroundOptions(props) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  if (props.theme.bgImage && props.isPremium === false) {\n    const newTheme = toggleBackgroundImageInGradientTheme(props.theme);\n    props.setTheme(newTheme);\n  }\n\n  return (\n    <Flex flexDir=\"column\" flex=\"1\" my=\"8\">\n      <Text\n        letterSpacing=\"wide\"\n        fontFamily={FONT_FAMILY}\n        fontSize=\"xl\"\n        ml=\"3\"\n        fontWeight=\"800\">\n        Background\n      </Text>\n      <Flex m=\"2\" flexDir=\"column\">\n        <Flex m=\"2\" w=\"90%\" justify=\"space-between\" align=\"center\">\n          {props.isPremium ? ' ' : <LockIcon fontSize=\"xl\" mr=\"2\" mb=\"1\" />}\n          <Text\n            fontFamily={FONT_FAMILY}\n            fontSize=\"xl\"\n            letterSpacing=\"wide\"\n            width=\"70%\"\n            mr=\"4\">\n            Background Image\n          </Text>\n          <Switch\n            {...(props.isPremium ? {} : { isDisabled: true })}\n            size=\"lg\"\n            colorScheme={props.theme.name}\n            isChecked={props.theme.bgImage}\n            onChange={() => {\n              const newTheme = toggleBackgroundImageInGradientTheme(\n                props.theme\n              );\n              props.setTheme(newTheme);\n            }}\n          />\n        </Flex>\n        {props.theme.bgImage ? (\n          <Flex m=\"2\" w=\"90%\" justify=\"space-between\">\n            <Text\n              fontFamily={FONT_FAMILY}\n              fontSize=\"xl\"\n              letterSpacing=\"wide\"\n              width=\"70%\"\n              mr=\"4\">\n              Random Image\n            </Text>\n            <Switch\n              size=\"lg\"\n              colorScheme={props.theme.name}\n              isChecked={props.theme.bgInfo.random}\n              onChange={() => {\n                const newTheme = toggleRandomImageInGradientTheme(props.theme);\n                props.setTheme(newTheme);\n              }}\n            />\n          </Flex>\n        ) : (\n          <div />\n        )}\n        {!props.theme.bgInfo.random && props.theme.bgImage ? (\n          <Button\n            my=\"4\"\n            minW=\"max-content\"\n            w=\"40%\"\n            p=\"6\"\n            fontFamily={FONT_FAMILY}\n            fontSize=\"xl\"\n            letterSpacing=\"wider\"\n            leftIcon={<Search2Icon />}\n            onClick={() => onOpen()}>\n            Find image\n          </Button>\n        ) : (\n          <div />\n        )}\n      </Flex>\n      <ImageSearchDrawer\n        isOpen={isOpen}\n        onClose={onClose}\n        theme={props.theme}\n        setTheme={props.setTheme}\n      />\n    </Flex>\n  );\n}\n\nexport default BackgroundOptions;\n","import { Flex, Square, Text, Tooltip, useToast } from '@chakra-ui/react';\nimport uuid from 'react-uuid';\nimport React from 'react';\nimport { LockIcon } from '@chakra-ui/icons';\nimport {\n  changeGradientThemeColorTo,\n  FONT_FAMILY,\n  themesList\n} from '../../Constants/themes';\n\nfunction ColourSelector(props) {\n  const toast = useToast();\n  let showLock = '';\n  if (!props.isPremium) {\n    showLock = <LockIcon textColor=\"black\" />;\n  }\n  return (\n    <Flex flexDir=\"column\" flex=\"1\">\n      <Text\n        letterSpacing=\"wide\"\n        fontFamily={FONT_FAMILY}\n        fontSize=\"xl\"\n        ml=\"3\"\n        fontWeight=\"800\">\n        Colours\n      </Text>\n      <Flex mt=\"4\" maxW=\"40vw\" flexWrap=\"wrap\">\n        {themesList.map((item, i) => {\n          return (\n            <Tooltip label={item.name.toUpperCase()} key={uuid()}>\n              <Square\n                m=\"2\"\n                size=\"10\"\n                bg={item.baseColor}\n                rounded=\"md\"\n                onClick={() => {\n                  if (i === 0 || i === 1 || props.isPremium) {\n                    props.setTheme(\n                      changeGradientThemeColorTo(props.theme, themesList[i])\n                    );\n                  } else {\n                    toast({\n                      title: 'Premium Required!',\n                      description:\n                        'You need to sign for Premium to Access this feature',\n                      status: 'warning',\n                      duration: 2000,\n                      isClosable: true\n                    });\n                  }\n                }}>\n                {i === 0 || i === 1 ? '' : showLock}\n              </Square>\n            </Tooltip>\n          );\n        })}\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default ColourSelector;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport * as firebaseui from 'firebaseui';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyC8QVn8zZkWmkCF04Jgx8IgZ-qoxqs1i9o',\n  authDomain: 'study-pomodoro.firebaseapp.com',\n  projectId: 'study-pomodoro',\n  storageBucket: 'study-pomodoro.appspot.com',\n  messagingSenderId: '851991856575',\n  appId: '1:851991856575:web:8295d763409bb002ab8d0a',\n  measurementId: 'G-N8FMQHP1TY'\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nconst db = firebaseApp.firestore();\nconst analytics = firebaseApp.analytics();\n\nconst ui = new firebaseui.auth.AuthUI(firebase.auth());\n\nexport { provider, db, analytics, ui };\n","import { db } from './firebase';\n\nexport const createUserInDB = user => {\n  db.collection('users')\n    .doc(user.uid)\n    .set({\n      isPremium: false\n    })\n    .then(() => {\n      console.log('Document successfully written!');\n    })\n    .catch(error => {\n      console.error('Error writing document: ', error);\n    });\n};\n\nexport const checkIfUserAlreadyExists = user => {\n  const docRef = db.collection('users').doc(user.uid);\n\n  docRef\n    .get()\n    .then(doc => {\n      if (doc.exists) {\n        // user already exists do not do anything\n      } else {\n        // user does not exist create a default non premium user\n        createUserInDB(user);\n      }\n    })\n    .catch(error => {\n      console.log('Error getting document:', error);\n    });\n};\n\nexport const checkIfUserIsPremium = (user, validationFunction) => {\n  const docRef = db.collection('users').doc(user.uid);\n\n  docRef\n    .get()\n    .then(doc => {\n      if (doc.exists) {\n        // user exists, check if user is prem\n        validationFunction(doc.data().isPremium);\n      }\n    })\n    .catch(error => {\n      console.log('Error getting document:', error);\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  Flex,\n  Text,\n  useMediaQuery,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Radio,\n  RadioGroup,\n  Stack\n} from '@chakra-ui/react';\nimport firebase from 'firebase/app';\nimport { MdAttachMoney } from 'react-icons/md';\nimport { StarIcon } from '@chakra-ui/icons';\nimport { loadStripe } from '@stripe/stripe-js';\n// import axios from 'axios';\nimport BackgroundOptions from './BackgroundOptions';\nimport ColourSelector from './ColourSelector';\nimport { FONT_FAMILY } from '../../Constants/themes';\nimport { provider } from '../../Constants/firebase';\nimport { checkIfUserAlreadyExists } from '../../Constants/firebaseUtils';\n\nfunction SideDrawer(props) {\n  const [btnText, setBtnText] = useState('SIGN IN');\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isOnmobile] = useMediaQuery('(max-width: 768px)');\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [value, setValue] = useState('1');\n\n  const isUserSignedIn = () => {\n    return currentUser != null;\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      if (user != null) {\n        setBtnText('Log Out');\n      }\n    });\n  }, []);\n\n  function signUserIn() {\n    if (isOnmobile) {\n      firebase\n        .auth()\n        .signInWithRedirect(provider)\n        .then(result => {\n          const { user } = result;\n          setCurrentUser(user);\n          setBtnText('Log Out');\n          checkIfUserAlreadyExists(user);\n        })\n        .catch(error => {\n          // if there is an error\n          console.log(`failed! ${error}`);\n        });\n    } else {\n      firebase\n        .auth()\n        .signInWithPopup(provider)\n        .then(result => {\n          const { user } = result;\n          setCurrentUser(user);\n          setBtnText('Log Out');\n          checkIfUserAlreadyExists(user);\n        })\n        .catch(error => {\n          // if there is an error\n          console.log(`failed! ${error}`);\n        });\n    }\n  }\n\n  const signInClicked = () => {\n    if (isUserSignedIn()) {\n      // user is already signed in\n      // todo: sign user out\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          setCurrentUser(null);\n          setBtnText('Log In');\n        })\n        .catch(error => {\n          // error\n          console.log(error);\n        });\n    } else {\n      // user not signed in\n      // todo: sign the user in\n      signUserIn();\n    }\n  };\n\n  const createCheckoutSession = priceId =>\n    fetch('http://localhost:4000/create-checkout-session', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        priceId,\n        email: currentUser.email\n      })\n    }).then(result => result.json());\n\n  const handleResult = result => {\n    console.log(result);\n  };\n\n  const processPayment = async () => {\n    const PRICE_ID = 'price_1Idbl2HDIe5YOLPEOenqpsQa';\n    const stripe = await loadStripe(\n      'pk_test_51Ia4N7HDIe5YOLPEPy2Zz3ymAbBKYiTDNKTAHJZ0kWEYHORd3ISIa2qVfuNbsRa71mbbbcNlNsqR4YZGuZoKOsYR00wJTCYWeO'\n    );\n\n    createCheckoutSession(PRICE_ID).then(data => {\n      // Call Stripe.js method to redirect to the new Checkout page\n      stripe\n        .redirectToCheckout({\n          sessionId: data.sessionId\n        })\n        .then(handleResult);\n    });\n  };\n\n  const themeDrawer = (\n    <DrawerContent>\n      <DrawerCloseButton />\n      <DrawerHeader>\n        <Text\n          ml=\"3\"\n          letterSpacing=\"wide\"\n          fontFamily={FONT_FAMILY}\n          fontSize=\"2xl\"\n          fontWeight=\"800\">\n          Customize Theme\n        </Text>\n      </DrawerHeader>\n\n      <DrawerBody>\n        <Flex flexDir=\"column\">\n          <ColourSelector\n            theme={props.theme}\n            setTheme={props.setTheme}\n            isPremium={props.isPremium}\n          />\n          <BackgroundOptions\n            theme={props.theme}\n            setTheme={props.setTheme}\n            isPremium={props.isPremium}\n          />\n        </Flex>\n      </DrawerBody>\n\n      <DrawerFooter>\n        <Button letiant=\"outline\" mr={3} onClick={props.onClose}>\n          Close\n        </Button>\n      </DrawerFooter>\n    </DrawerContent>\n  );\n\n  const settingsDrawer = (\n    <DrawerContent>\n      <DrawerCloseButton />\n      <DrawerHeader>\n        <Text\n          ml=\"3\"\n          letterSpacing=\"wide\"\n          fontFamily={FONT_FAMILY}\n          fontSize=\"2xl\"\n          fontWeight=\"800\">\n          SETTINGS\n        </Text>\n      </DrawerHeader>\n\n      <DrawerBody>\n        <Flex flexDir=\"column\">\n          <Flex flexDir=\"row\" justifyContent=\"space-between\">\n            <Text\n              my=\"2\"\n              fontWeight=\"semibold\"\n              fontSize=\"2xl\"\n              letterSpacing=\"wide\"\n              fontFamily={FONT_FAMILY}>\n              {isUserSignedIn()\n                ? `Hi ${currentUser.displayName.split(' ')[0]}`\n                : 'Hi User'}\n            </Text>\n            <Button\n              onClick={onOpen}\n              bg={props.isPremium && isUserSignedIn() ? '#FFD700' : 'blue'}\n              textColor={\n                props.isPremium && isUserSignedIn() ? 'black' : 'white'\n              }\n              leftIcon={\n                props.isPremium && isUserSignedIn() ? (\n                  <StarIcon />\n                ) : (\n                  <MdAttachMoney />\n                )\n              }>\n              {props.isPremium && isUserSignedIn() ? 'Premium' : 'Buy Premium'}\n            </Button>\n          </Flex>\n          <Button onClick={signInClicked}>{btnText}</Button>\n        </Flex>\n      </DrawerBody>\n\n      <DrawerFooter>\n        <Button letiant=\"outline\" mr={3} onClick={props.onClose}>\n          Close\n        </Button>\n      </DrawerFooter>\n    </DrawerContent>\n  );\n\n  return (\n    <>\n      <Drawer\n        isOpen={props.isOpen}\n        placement=\"right\"\n        onClose={props.onClose}\n        finalFocusRef={props.btnRef}>\n        <DrawerOverlay>\n          {props.mode === 'THEME' ? themeDrawer : settingsDrawer}\n        </DrawerOverlay>\n      </Drawer>\n      <Modal blockScrollOnMount={false} isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Payment Plans</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {!props.isPremium || !isUserSignedIn() ? (\n              <Text fontWeight=\"bold\" mb=\"1rem\" fontSize=\"lg\">\n                <RadioGroup onChange={setValue} value={value}>\n                  <Stack direction=\"column\">\n                    <Radio value=\"1\">1 Month</Radio>\n                    <Radio value=\"2\">6 Months</Radio>\n                    <Radio value=\"3\">1 Year</Radio>\n                  </Stack>\n                </RadioGroup>\n              </Text>\n            ) : (\n              <Text fontWeight=\"bold\" mb=\"1rem\" fontSize=\"lg\">\n                You have 10 days left as a premium member\n              </Text>\n            )}\n          </ModalBody>\n\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n            <Button variant=\"ghost\" onClick={processPayment}>\n              Buy\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport {\n  Flex,\n  Heading,\n  IconButton,\n  useColorMode,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { RiAccountCircleLine } from 'react-icons/ri';\nimport { MoonIcon, SunIcon } from '@chakra-ui/icons';\nimport { IoMdBrush } from 'react-icons/io';\nimport SideDrawer from './SideDrawer';\nimport { FONT_FAMILY } from '../../Constants/themes';\n\nfunction Header(props) {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [mode, setMode] = useState('THEME');\n\n  const btnRef = React.useRef();\n\n  return (\n    <>\n      <Flex justify=\"center\" align=\"center\" p=\"5\" m=\"4\">\n        <Heading\n          color={colorMode === 'light' ? 'black' : 'white'}\n          size=\"2xl\"\n          letterSpacing=\"wide\"\n          fontFamily={FONT_FAMILY}\n          {...(props.theme.bgImage\n            ? props.theme.styles.imageModeContrastText\n            : {})}\n          mx=\"20px\">\n          Study Pomodoro\n        </Heading>\n        <IconButton\n          color={colorMode === 'light' ? 'black' : 'white'}\n          icon={colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\n          {...(props.theme.bgImage\n            ? props.theme.styles.imageModeContrastBg\n            : {})}\n          onClick={toggleColorMode}\n          mx=\"10px\"\n          fill=\"red\"\n        />\n        <IconButton\n          color={colorMode === 'light' ? 'black' : 'white'}\n          icon={<IoMdBrush />}\n          {...(props.theme.bgImage\n            ? props.theme.styles.imageModeContrastBg\n            : {})}\n          onClick={() => {\n            setMode('THEME');\n            onOpen();\n          }}\n          mx=\"10px\"\n          fill=\"red\"\n        />\n        <IconButton\n          color={colorMode === 'light' ? 'black' : 'white'}\n          icon={<RiAccountCircleLine />}\n          {...(props.theme.bgImage\n            ? props.theme.styles.imageModeContrastBg\n            : {})}\n          onClick={() => {\n            setMode('SETTINGS');\n            onOpen();\n          }}\n          mx=\"10px\"\n          fill=\"red\"\n        />\n      </Flex>\n      <SideDrawer\n        isOpen={isOpen}\n        onClose={onClose}\n        btnRef={btnRef}\n        theme={props.theme}\n        setTheme={props.setTheme}\n        mode={mode}\n        isPremium={props.isPremium}\n      />\n    </>\n  );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { HStack, Box, useMediaQuery } from '@chakra-ui/react';\nimport { FONT_FAMILY } from '../../Constants/themes';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const [isOnmobile] = useMediaQuery('(max-width: 768px)');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  // function to check when in the correct mode( update/default) to change the element if needed when pressed the check button in the updateModo\n  const handleSubmit = e => {\n    e.preventDefault();\n    // function to create a random id and get the text input, used to give value to the Todo Item\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n      columnID: 'NEW'\n    });\n\n    setInput(' ');\n  };\n  // function: Bon to insert the elements into the TodoList\n  const taskOption = (\n    <HStack\n      spacing=\"0px\"\n      w={isOnmobile ? '70vw' : '32vw'}\n      fontFamily={FONT_FAMILY}>\n      <Box\n        {...props.theme.styles.bgNoHover}\n        bg=\"transparent\"\n        border=\"2px\"\n        fontSize=\"xl\"\n        letterSpacing=\"wide\"\n        borderRadius=\"4px 0 0 4px\"\n        p=\"10px 12px 10px 12px\"\n        borderColor={props.theme.startColor}\n        color={props.theme.colorMode === 'light' ? 'black' : 'white'}\n        _placeholder={{\n          color: props.theme.colorMode === 'light' ? 'black' : 'white',\n          ...(props.theme.bgImage\n            ? props.theme.styles.imageModeContrastText\n            : {})\n        }}\n        w=\"70%\"\n        as=\"input\"\n        my=\"10px\"\n        placeholder=\"Add Task\"\n        value={input}\n        onChange={handleChange}\n      />\n      <Box\n        as=\"button\"\n        type=\"submit\"\n        ml=\"0px\"\n        w=\"30%\"\n        border=\"2px\"\n        py=\"12px\"\n        fontSize=\"lg\"\n        letterSpacing=\"wide\"\n        borderRadius=\"0 4px 4px 0\"\n        textAlign=\"center\"\n        {...props.theme.styles.bg}\n        borderColor={props.theme.startColor}\n        borderLeft=\"0px\">\n        Add Task\n      </Box>\n    </HStack>\n  );\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {taskOption}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { EditIcon, DeleteIcon, CheckIcon } from '@chakra-ui/icons';\nimport { Box, Flex, useMediaQuery } from '@chakra-ui/react';\nimport { FONT_FAMILY } from '../../Constants/themes';\n\nfunction TodoItem(props) {\n  const [updateMode, setUpdateMode] = useState(false);\n  const [input, setInput] = useState(props.todo.text);\n  const [isOnmobile] = useMediaQuery('(max-width: 768px)');\n\n  const inputRef = useRef(null);\n  // function to make focus when updating the Todo element\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [updateMode]);\n  // funcito nto handle the text element of the todo Item\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  // function to check when in the correct mode( update/default) to change the element if needed when pressed the check button in the updateModo\n  const handleSubmit = e => {\n    e.preventDefault();\n    setUpdateMode(false);\n    props.updateTodo(props.index, props.todo.columnID, input);\n  };\n  // function for when in the update mode to change the Todo element being updated to a different visual mode\n  const updateTodoMode = (\n    <Box\n      {...props.provided.draggableProps}\n      {...props.provided.dragHandleProps}\n      ref={props.provided.innerRef}\n      {...props.theme.styles.bgNoHover}\n      w={isOnmobile ? '42vw' : '100%'}\n      borderRadius=\"4px\"\n      p={isOnmobile ? '2' : '4'}\n      fontSize=\"xl\"\n      letterSpacing=\"wider\"\n      fontFamily={FONT_FAMILY}\n      my=\"10px\"\n      key={props.index}>\n      <Flex>\n        <Box w=\"40vw\" overflow=\"hidden\" key={props.todo.id}>\n          <form className=\"todo-form\" onSubmit={handleSubmit}>\n            <Box\n              {...props.theme.styles.bgNoHover}\n              bg=\"transparent\"\n              border=\"2px\"\n              borderRadius=\"4px 0 0 4px\"\n              p=\"4px 8px\"\n              borderColor=\"white\"\n              fontSize=\"xl\"\n              letterSpacing=\"wider\"\n              fontFamily={FONT_FAMILY}\n              color={props.theme.colorMode === 'light' ? 'black' : 'white'}\n              _placeholder={{\n                color: props.theme.colorMode === 'light' ? 'black' : 'white',\n                ...(props.theme.bgImage\n                  ? props.theme.styles.imageModeContrastText\n                  : {})\n              }}\n              w={isOnmobile ? '30vw' : '100%'}\n              as=\"input\"\n              placeholder=\"Edit Text\"\n              value={input}\n              onChange={handleChange}\n              ref={inputRef}\n            />\n          </form>\n        </Box>\n        <Flex align=\"center\" justify=\"center\" w=\"10%\">\n          <CheckIcon\n            boxSize=\"5\"\n            m=\"8px\"\n            onClick={() => {\n              setUpdateMode(false);\n              props.updateTodo(props.index, props.todo.columnID, input);\n            }}\n          />\n        </Flex>\n      </Flex>\n    </Box>\n  );\n  // function to define when in default page in the file\n  const defaultTodoMode = (\n    <Box\n      {...props.provided.draggableProps}\n      {...props.provided.dragHandleProps}\n      ref={props.provided.innerRef}\n      {...props.theme.styles.bgNoHover}\n      w={isOnmobile ? '42vw' : '100%'}\n      borderRadius=\"4px\"\n      p={isOnmobile ? '2' : '4'}\n      my=\"10px\"\n      fontSize=\"xl\"\n      letterSpacing=\"wide\"\n      fontFamily={FONT_FAMILY}\n      key={props.index}>\n      <Flex justify=\"space-between\">\n        <Box\n          w={isOnmobile ? '20vw' : '200%'}\n          overflow=\"hidden\"\n          key={props.todo.id}>\n          {props.todo.text}\n        </Box>\n\n        <Flex\n          align=\"center\"\n          justify=\"center\"\n          w={isOnmobile ? '10vw' : '40%'}\n          pr={isOnmobile ? '2' : '0px'}>\n          <DeleteIcon\n            boxSize={isOnmobile ? '4' : '5'}\n            m=\"8px\"\n            onClick={() => props.removeTodo(props.index, props.todo.columnID)}\n          />\n          <EditIcon\n            boxSize={isOnmobile ? '4' : '5'}\n            m=\"8px\"\n            onClick={() => {\n              setUpdateMode(true);\n              setInput(props.todo.text);\n            }}\n          />\n        </Flex>\n      </Flex>\n    </Box>\n  );\n  // return to check when in the correct mode\n  return updateMode ? updateTodoMode : defaultTodoMode;\n}\n\nexport default TodoItem;\n","import React, { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport TodoForm from './TodoForm';\nimport TodoItem from './TodoItem';\n\nfunction TodoList(props) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  // function to save the update when pressed the check button\n  const submitUpdate = value => {\n    props.updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n  // map to map each element inside the todoList to have is as a prop when calling it from other function\n  return props.todos.map((todo, index) => (\n    <Draggable key={todo.id} draggableId={`${todo.id}`} index={index}>\n      {provided => (\n        <TodoItem\n          theme={props.theme}\n          provided={provided}\n          todo={todo}\n          index={index}\n          removeTodo={props.removeTodo}\n          updateTodo={props.updateTodo}\n        />\n      )}\n    </Draggable>\n  ));\n}\n\nexport default TodoList;\n","/* eslint-disable no-unused-expressions */\nimport React, { useState, useEffect } from 'react';\nimport { Heading, Flex, Box } from '@chakra-ui/react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { FONT_FAMILY } from '../../Constants/themes';\n\nfunction Tasks(props) {\n  // useState to create the todo items and use the object elements to store the values of each column\n  const [todos, setTodos] = useState(\n    localStorage.getItem('timer-todo')\n      ? JSON.parse(localStorage.getItem('timer-todo'))\n      : {\n          newTasks: [],\n          completedTasks: []\n        }\n  );\n  useEffect(() => {\n    window.localStorage.setItem('timer-todo', JSON.stringify(todos));\n  }, [todos]);\n  // function to check the location in the DND feature and save the values for the respective location\n  function onEnd(result) {\n    if (result.destination) {\n      const start = result.source.droppableId;\n      const finish = result.destination.droppableId;\n      if (start === finish) {\n        const items = start === 'NEW' ? todos.newTasks : todos.completedTasks;\n        const [reorder] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorder);\n        const newTodos = { ...todos };\n        start === 'NEW'\n          ? (newTodos.newTasks = items)\n          : (newTodos.completedTasks = items);\n        setTodos(newTodos);\n      } else {\n        const sourceList =\n          start === 'DONE' ? todos.completedTasks : todos.newTasks;\n        const [removed] = sourceList.splice(result.source.index, 1);\n        removed.columnID === 'DONE'\n          ? (removed.columnID = 'NEW')\n          : (removed.columnID = 'DONE');\n        const destinationList =\n          finish === 'DONE' ? todos.completedTasks : todos.newTasks;\n        destinationList.splice(result.destination.index, 0, removed);\n        const newTodos = { ...todos };\n        if (start === 'DONE') {\n          newTodos.completedTasks = sourceList;\n          newTodos.newTasks = destinationList;\n        } else {\n          newTodos.completedTasks = destinationList;\n          newTodos.newTasks = sourceList;\n        }\n        setTodos(newTodos);\n      }\n    }\n  }\n  // function to check create the elements of the todo list ( Todo Item ).\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = { ...todos };\n    newTodos.newTasks = [todo, ...todos.newTasks];\n\n    setTodos(newTodos);\n  };\n  // function to update the elements in the todo List\n  const updateTodo = (index, columnID, newValue) => {\n    if (!newValue || /^\\s*$/.test(newValue)) {\n      return;\n    }\n    const newTodos = { ...todos };\n\n    if (columnID === 'NEW') {\n      const items = [...todos.newTasks];\n      items[index].text = newValue;\n      newTodos.newTasks = items;\n    } else {\n      const items = [...todos.completedTasks];\n      items[index].text = newValue;\n      newTodos.completedTasks = items;\n    }\n    setTodos(newTodos);\n  };\n  // remove function to Remove the Todo Item when pressed the button delete\n  const removeTodo = (index, columnID) => {\n    const newTodos = { ...todos };\n\n    if (columnID === 'NEW') {\n      const items = [...todos.newTasks];\n      items.splice(index, 1);\n      newTodos.newTasks = items;\n    } else {\n      const items = [...todos.completedTasks];\n      items.splice(index, 1);\n      newTodos.completedTasks = items;\n    }\n    setTodos(newTodos);\n  };\n  // function to run the Tasks\n  const desktopTodos = (\n    <DragDropContext onDragEnd={onEnd}>\n      <Flex mx=\"10px\" w=\"95vw\" justifyContent=\"center\" h=\"100%\">\n        <Flex\n          mx=\"10px\"\n          w=\"1/3\"\n          h=\"100%\"\n          flex=\"1\"\n          justifyContent=\"center\"\n          flexDirection=\"column\">\n          <Heading\n            fontSize=\"3xl\"\n            my=\"30px\"\n            letterSpacing=\"wide\"\n            fontFamily={FONT_FAMILY}\n            textAlign=\"center\"\n            {...(props.theme.bgImage\n              ? props.theme.styles.imageModeContrastText\n              : {})}>\n            New Tasks\n          </Heading>\n          <Droppable droppableId=\"NEW\">\n            {provided => (\n              <Box\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                w=\"100%\"\n                h=\"100%\"\n                minH=\"200px\">\n                <TodoList\n                  theme={props.theme}\n                  todos={todos.newTasks}\n                  removeTodo={removeTodo}\n                  updateTodo={updateTodo}\n                />\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </Flex>\n        <Flex\n          mx=\"10px\"\n          w=\"1/3\"\n          h=\"100%\"\n          flex=\"1\"\n          justifyContent=\"center\"\n          flexDirection=\"column\">\n          <Heading\n            textAlign=\"center\"\n            fontSize=\"3xl\"\n            fontFamily={FONT_FAMILY}\n            my=\"30px\"\n            letterSpacing=\"wide\"\n            {...(props.theme.bgImage\n              ? props.theme.styles.imageModeContrastText\n              : {})}>\n            Tasks Done\n          </Heading>\n          <Droppable droppableId=\"DONE\">\n            {provided => (\n              <Box\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                w=\"100%\"\n                h=\"100%\"\n                minH=\"200px\">\n                <TodoList\n                  theme={props.theme}\n                  todos={todos.completedTasks}\n                  removeTodo={removeTodo}\n                  updateTodo={updateTodo}\n                />\n                {provided.placeholder}\n              </Box>\n            )}\n          </Droppable>\n        </Flex>\n      </Flex>\n    </DragDropContext>\n  );\n  return (\n    <Flex w=\"100vw\" flexDir=\"column\" align=\"center\">\n      <Heading\n        fontSize=\"4xl\"\n        textAlign=\"center\"\n        fontFamily={FONT_FAMILY}\n        letterSpacing=\"wide\"\n        mt=\"30px\"\n        {...(props.theme.bgImage\n          ? props.theme.styles.imageModeContrastText\n          : {})}>\n        Tasks\n      </Heading>\n      <TodoForm theme={props.theme} onSubmit={addTodo} />\n      {desktopTodos}\n    </Flex>\n  );\n}\n\nexport default Tasks;\n","export const SESSION = 'session';\nexport const BREAK = 'break';\n","export const createNotification = data => {\n  if (data == null || !data) {\n    return false;\n  }\n\n  const title = data.title === undefined ? 'Notification' : data.title;\n  const { clickCallback } = data;\n  const message = data.message === undefined ? 'null' : data.message;\n  const icon =\n    data.icon === undefined\n      ? 'https://cdn2.iconfinder.com/data/icons/circle-icons-1/64/hourglass-64.png'\n      : data.icon;\n\n  const sendNotification = () => {\n    const notification = new Notification(title, {\n      icon,\n      body: message\n    });\n    if (clickCallback !== undefined) {\n      notification.onclick = () => {\n        // clickCallback();\n        notification.close();\n      };\n    }\n  };\n\n  if (!window.Notification) {\n    return false;\n  }\n  if (Notification.permission === 'default') {\n    Notification.requestPermission(p => {\n      if (p !== 'denied') {\n        sendNotification();\n      }\n    });\n  } else {\n    sendNotification();\n    return true;\n  }\n  return false;\n};\n\nexport const requestNotificationPermission = () => {\n  Notification.requestPermission();\n};\n\nexport const isPermissionGranted = () => {\n  return Notification.permission !== 'default';\n};\n","import { Container, Flex, Text, useColorMode } from '@chakra-ui/react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { SESSION, BREAK } from '../../Constants/modes';\nimport { createNotification } from '../../Constants/utils';\n\nfunction RunningTimer(props) {\n  // useStates defined here\n  const { colorMode } = useColorMode();\n  const [seconds, setSeconds] = useState(0);\n  const [mins, setMins] = useState(\n    props.mode === SESSION ? props.sessionMins : props.breakMins\n  );\n  const timeProps = localStorage.getItem('timerProps');\n  const [updatedTime, setUpdatedTime] = useState(\n    // eslint-disable-next-line no-nested-ternary\n    timeProps\n      ? JSON.parse(localStorage.getItem('timerProps')).updatedTime\n      : props.mode === SESSION\n      ? props.sessionMins\n      : props.breakMins\n  );\n\n  // variables defined here\n  const time = useRef(null);\n\n  //  useEffect to store data in local storage\n  useEffect(() => {\n    const timerProps = JSON.parse(localStorage.getItem('timerProps'));\n    if (timerProps) {\n      timerProps.mode = props.mode;\n      timerProps.updatedTime = updatedTime;\n      timerProps.updatedStart = props.updatedStart;\n      window.localStorage.setItem('timerProps', JSON.stringify(timerProps));\n    }\n  }, [props.mode, updatedTime, props.updatedStart]);\n  //  useEffect to reload data from local storage and store in our variables\n  useEffect(() => {\n    let timerProps = JSON.parse(localStorage.getItem('timerProps'));\n    if (timerProps) {\n      setUpdatedTime(timerProps.updatedTime);\n      props.setMode(timerProps.mode);\n      props.setUpdatedStart(timerProps.updatedStart);\n      setMins(Math.floor(timerProps.updatedTime / 60));\n      setSeconds(timerProps.updatedTime % 60);\n    } else {\n      timerProps = {};\n\n      timerProps.started = true;\n      timerProps.isRunning = false;\n      timerProps.mode = props.mode;\n      timerProps.updatedTime = updatedTime;\n      timerProps.updatedStart = true;\n      window.localStorage.setItem('timerProps', JSON.stringify(timerProps));\n    }\n  }, []);\n  useEffect(() => {\n    if (!props.updatedStart) {\n      props.setMode(SESSION);\n      setSeconds(0);\n      setMins(props.mode === SESSION ? props.sessionMins : props.breakMins);\n      props.setMode(SESSION);\n    }\n  }, [props.updatedStart]);\n  // javascript functions defined here\n  // function to handle the countdown. will be called every second.\n  const countdownHandler = () => {\n    setUpdatedTime(time.current);\n    if (time.current < 0) {\n      setMins(props.mode === !SESSION ? props.sessionMins : props.breakMins);\n      setUpdatedTime(\n        props.mode === !SESSION ? props.sessionMins * 60 : props.breakMins * 60\n      );\n\n      // send a notification\n      createNotification({\n        title: `${props.mode.toUpperCase()}'s Over! `,\n        message: `${\n          props.mode === SESSION ? BREAK.toUpperCase() : SESSION.toUpperCase()\n        } time!`,\n        icon:\n          'https://cdn2.iconfinder.com/data/icons/circle-icons-1/64/hourglass-64.png',\n        clickCallback() {\n          // function executed on clicking notification\n        }\n      });\n\n      // change the mode state\n      props.setMode(props.mode === SESSION ? BREAK : SESSION);\n    }\n  };\n\n  // function that takes anammout of minutes as a parameter and starts the timer\n  const startTimer = startingMins => {\n    time.current = startingMins * 60 - 1;\n    const runningInterval = window.setInterval(() => {\n      setSeconds(time.current % 60);\n      setMins(Math.floor(time.current / 60));\n      time.current -= 1;\n      countdownHandler();\n    }, 1000);\n    return runningInterval;\n  };\n\n  // useEffects defined here\n  useEffect(() => {\n    let interval;\n    if (props.isRunning) {\n      // when start is clicked state is changed\n      if (mins === props.sessionMins || mins === props.breakMins) {\n        // checking if timer is starting again or just starting\n        if (props.mode === SESSION) {\n          // check the mode\n          interval = startTimer(props.sessionMins);\n        } else if (props.mode === BREAK) {\n          // check the mode\n          interval = startTimer(props.breakMins);\n        }\n      } else {\n        //  if timer is running and we pause, when unpaused we pass updated time.current back into startTimer\n        interval = startTimer((updatedTime + 1) / 60);\n      }\n    }\n    return () => clearInterval(interval);\n  }, [props.mode, props.isRunning]);\n\n  return (\n    <Flex height=\"100%\" justifyContent=\"center\" alignItems=\"center\">\n      <Container h=\"100%\" bg=\"transparent\" centerContent>\n        <Text\n          m=\"5\"\n          fontSize=\"4xl\"\n          letterSpacing=\"wide\"\n          {...props.theme.styles.bgNoHover}\n          textShadow={\n            props.theme.colorMode === 'dark' && props.theme.bgImage\n              ? `1px 1px 50px black, -1px -1px 40px ${props.theme.color.baseColor}`\n              : `1px 1px 50px ${props.theme.color.baseColor}, -1px -1px 40px ${props.theme.color.baseColor}, -4px 4px 30px black${props.theme.color.baseColor}`\n          }\n          bgClip=\"text\"\n          fontWeight=\"extrabold\">\n          - {props.mode.toUpperCase()} -\n        </Text>\n\n        <Text\n          color={colorMode === 'light' ? 'black' : 'white'}\n          {...(props.theme.bgImage\n            ? props.theme.styles.imageModeContrastText\n            : {})}\n          letterSpacing=\"wide\"\n          fontSize=\"100px\">\n          {seconds < 10 ? `${mins}:0${seconds}` : `${mins}:${seconds}`}\n        </Text>\n      </Container>\n    </Flex>\n  );\n}\n\nexport default RunningTimer;\n","export const isInputValid = value => {\n  return !Number.isNaN(value) && value !== '' && Number.isNaN(value) != null;\n};\n\nexport const validateMins = (\n  sessionMins,\n  setSessionMins,\n  maxSessionMins,\n  toast\n) => {\n  if (sessionMins > maxSessionMins) {\n    setSessionMins(maxSessionMins);\n    toast({\n      title: 'Error',\n      description: 'Minutes are exceeding max limit',\n      status: 'error',\n      duration: 1000,\n      isClosable: true\n    });\n  } else if (sessionMins < 1) {\n    setSessionMins(1);\n    toast({\n      title: 'Error',\n      description: 'Minutes cannot be less than 1',\n      status: 'error',\n      duration: 1000,\n      isClosable: true\n    });\n  }\n};\n","import { AddIcon, MinusIcon } from '@chakra-ui/icons';\nimport {\n  Button,\n  Container,\n  Editable,\n  EditableInput,\n  EditablePreview,\n  Flex,\n  Spacer,\n  Square,\n  Text,\n  useToast\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { isInputValid, validateMins } from './utilities';\n\nfunction MinSetter(props) {\n  const toast = useToast();\n\n  return (\n    <Container\n      h=\"100%\"\n      flex=\"1\"\n      bg=\"transparent\"\n      centerContent\n      {...(props.theme.bgImage\n        ? props.theme.styles.imageModeContrastText\n        : {})}>\n      <Flex height=\"100%\" direction=\"column\" align=\"center\" justify=\"center\">\n        <Spacer />\n        <Text\n          fontSize=\"xl\"\n          my=\"10px\"\n          w=\"100%\"\n          fontWeight=\"bold\"\n          letterSpacing=\"wider\"\n          textAlign=\"center\"\n          m=\"8\">\n          {props.title.toUpperCase()} (mins)\n        </Text>\n        <Spacer />\n        <Square\n          size=\"40px\"\n          {...props.theme.styles.bg}\n          rounded=\"md\"\n          fontSize=\"lg\"\n          as={Button}\n          onClick={() => {\n            validateMins(props.mins, props.setMins, props.maxVal, toast);\n            if (props.mins < props.maxVal) {\n              props.setMins(props.mins + 1);\n            } else {\n              toast({\n                title: 'Error',\n                description: `Minutes cannot exceed max limit ${props.maxVal}`,\n                status: 'error',\n                duration: 1000,\n                isClosable: true\n              });\n            }\n          }}>\n          <AddIcon />\n        </Square>\n        <Spacer />\n        <Square\n          size=\"100px\"\n          bg=\"transparent\"\n          rounded=\"md\"\n          fontSize=\"7xl\"\n          textAlign=\"center\">\n          <Editable\n            defaultValue={props.defaultMins}\n            value={props.mins}\n            onSubmit={val => {\n              props.setMins(parseInt(val, 10));\n              validateMins(props.mins, props.setMins, props.maxVal, toast);\n              if (!isInputValid(val)) {\n                props.setMins(props.defaultMins);\n              }\n            }}\n            onChange={val => {\n              props.setMins(val);\n            }}>\n            <EditablePreview />\n            <EditableInput />\n          </Editable>\n        </Square>\n        <Spacer />\n        <Square\n          size=\"40px\"\n          {...props.theme.styles.bg}\n          rounded=\"md\"\n          fontSize=\"lg\"\n          as={Button}\n          onClick={() => {\n            validateMins(props.mins, props.setMins, props.maxVal, toast);\n            if (props.mins > 1) {\n              props.setMins(props.mins - 1);\n            } else {\n              toast({\n                title: 'Error',\n                description: 'Minutes cannot be less than 1',\n                status: 'error',\n                duration: 1000,\n                isClosable: true\n              });\n            }\n          }}>\n          <MinusIcon />\n        </Square>\n        <Spacer />\n      </Flex>\n    </Container>\n  );\n}\n\nexport default MinSetter;\n","import { Flex, useColorMode } from '@chakra-ui/react';\nimport React from 'react';\nimport MinSetter from './MinSetter';\n\nfunction TimerEditMode(props) {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Flex\n      height=\"100%\"\n      color={colorMode === 'light' ? 'black' : 'white'}\n      justifyContent=\"center\"\n      alignItems=\"center\">\n      <MinSetter\n        theme={props.theme}\n        title=\"Session\"\n        defaultMins={25}\n        mins={props.sessionMins}\n        maxVal={props.maxSessionMins}\n        setMins={props.setSessionMins}\n      />\n\n      <MinSetter\n        theme={props.theme}\n        title=\"Break\"\n        defaultMins={10}\n        mins={props.breakMins}\n        maxVal={props.maxBreakMins}\n        setMins={props.setBreakMins}\n      />\n    </Flex>\n  );\n}\n\nexport default TimerEditMode;\n","import {\n  Box,\n  Button,\n  Center,\n  Flex,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport React, { useState, useEffect } from 'react';\nimport { SESSION } from '../../Constants/modes';\nimport { FONT_FAMILY } from '../../Constants/themes';\nimport {\n  isPermissionGranted,\n  requestNotificationPermission\n} from '../../Constants/utils';\nimport RunningTimer from './RunningTimer';\nimport TimerEditMode from './TimerEditMode';\n\nfunction Timer(props) {\n  const [sessionMins, setSessionMins] = useState(25);\n  const [breakMins, setBreakMins] = useState(10);\n  const [started, setStarted] = useState(false);\n  const [mode, setMode] = useState(SESSION);\n  const [isRunning, setIsRunning] = useState(true);\n  const [updatedStart, setUpdatedStart] = useState(false);\n  const initialFocusRef = React.useRef();\n\n  const { onOpen, onClose, isOpen } = useDisclosure();\n\n  let displayedTimer;\n\n  // useEffect to parse local storage and load started value on refresh\n  useEffect(() => {\n    const timerProp = JSON.parse(localStorage.getItem('timerProps'));\n    if (timerProp) {\n      setStarted(timerProp.started);\n      setIsRunning(false);\n      setMode(timerProp.mode);\n      setUpdatedStart(timerProp.updatedStart);\n      setBreakMins(timerProp.breakMins ? timerProp.breakMins : 10);\n      setSessionMins(timerProp.sessionMins ? timerProp.sessionMins : 25);\n    }\n  }, []);\n\n  // useEffect to save Mode to local storage\n  useEffect(() => {\n    const timerProp = JSON.parse(localStorage.getItem('timerProps'));\n    if (timerProp) {\n      timerProp.started = started;\n      timerProp.sessionMins = sessionMins;\n      timerProp.breakMins = breakMins;\n      window.localStorage.setItem('timerProps', JSON.stringify(timerProp));\n    }\n  }, [started, breakMins, sessionMins]);\n\n  if (started) {\n    displayedTimer = (\n      <RunningTimer\n        theme={props.theme}\n        mode={mode}\n        sessionMins={sessionMins}\n        setMode={setMode}\n        started={started}\n        setStarted={setStarted}\n        isRunning={isRunning}\n        setIsRunning={setIsRunning}\n        breakMins={breakMins}\n        setUpdatedStart={setUpdatedStart}\n        updatedStart={updatedStart}\n      />\n    );\n  } else {\n    displayedTimer = (\n      <TimerEditMode\n        theme={props.theme}\n        sessionMins={sessionMins}\n        setSessionMins={setSessionMins}\n        maxSessionMins={60}\n        breakMins={breakMins}\n        setBreakMins={setBreakMins}\n        maxBreakMins={60}\n      />\n    );\n  }\n\n  const startClicked = () => {\n    if (!isPermissionGranted()) {\n      requestNotificationPermission();\n    }\n\n    onClose();\n    setStarted(!started);\n    setIsRunning(true);\n    setUpdatedStart(!updatedStart);\n  };\n\n  const buttonWithPopOver = (\n    <Popover\n      initialFocusRef={initialFocusRef}\n      placement=\"bottom\"\n      isOpen={isOpen}\n      onOpen={onOpen}\n      onClose={onClose}\n      closeOnBlur>\n      <PopoverTrigger>\n        <Button\n          {...props.theme.styles.bg}\n          fontSize=\"2xl\"\n          letterSpacing=\"wider\"\n          p=\"6\">\n          {started ? 'STOP' : 'START'}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent color=\"white\" bg=\"gray.800\">\n        <PopoverHeader\n          pt={4}\n          fontSize=\"2xl\"\n          letterSpacing=\"wide\"\n          fontWeight=\"bold\"\n          border=\"0\">\n          Notification Request\n        </PopoverHeader>\n        <PopoverArrow />\n        <PopoverCloseButton />\n        <PopoverBody fontSize=\"lg\" letterSpacing=\"wide\">\n          Would you like to receive Notifications when the session ends?\n        </PopoverBody>\n        <PopoverFooter\n          border=\"0\"\n          d=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          pb={4}>\n          <Flex w=\"100%\" justify=\"flex-end\" size=\"lg\" fontFamily=\"Roboto\">\n            <Button bg=\"green.500\" fontSize=\"sm\" onClick={startClicked}>\n              YES\n            </Button>\n            <Button\n              ml=\"2\"\n              bg=\"red.500\"\n              fontSize=\"sm\"\n              onClick={startClicked}\n              ref={initialFocusRef}>\n              NO THANKS\n            </Button>\n          </Flex>\n        </PopoverFooter>\n      </PopoverContent>\n    </Popover>\n  );\n\n  return (\n    <Box\n      w=\"90%\"\n      minH=\"40vh\"\n      rounded=\"xl\"\n      boxShadow=\"dark-lg\"\n      fontFamily={FONT_FAMILY}\n      letterSpacing=\"wide\"\n      p=\"2\"\n      {...(props.theme.bgImage ? props.theme.styles.imageModeContrastBg : {})}>\n      <Flex\n        minH=\"40vh\"\n        h=\"100%\"\n        justify=\"center\"\n        align=\"center\"\n        flexDir=\"column\">\n        <Center>{displayedTimer}</Center>\n        <Flex m=\"4\" justify=\"center\" align=\"center\">\n          <Center m=\"20px\">\n            {isPermissionGranted() ? (\n              <Button\n                {...props.theme.styles.bg}\n                fontSize=\"2xl\"\n                letterSpacing=\"wider\"\n                p=\"6\"\n                onClick={startClicked}>\n                {started ? 'STOP' : 'START'}\n              </Button>\n            ) : (\n              buttonWithPopOver\n            )}\n          </Center>\n\n          {started ? (\n            <Center>\n              <Button\n                {...props.theme.styles.bg}\n                fontSize=\"2xl\"\n                letterSpacing=\"wider\"\n                p=\"6\"\n                onClick={() => setIsRunning(!isRunning)}>\n                {isRunning ? 'PAUSE' : 'RESUME'}\n              </Button>\n            </Center>\n          ) : (\n            <div />\n          )}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default Timer;\n","import { React, useEffect, useState } from 'react';\nimport './App.css';\nimport { Box, Container, useColorMode } from '@chakra-ui/react';\nimport 'focus-visible/dist/focus-visible';\nimport firebase from 'firebase/app';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport Timer from './components/Timer';\nimport { generateGradientTheme, PURPLE } from './Constants/themes';\nimport { checkIfUserIsPremium } from './Constants/firebaseUtils';\n\nfunction App() {\n  const { colorMode } = useColorMode();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isPremium, setIsPremium] = useState(false);\n  const [timerTheme, setTimerTheme] = useState(\n    localStorage.getItem('timer-theme')\n      ? JSON.parse(localStorage.getItem('timer-theme'))\n      : generateGradientTheme(PURPLE, colorMode)\n  );\n\n  const isUserPremium = result => {\n    if (result) {\n      setIsPremium(true);\n      // talk to stripe check user subs\n    } else {\n      setIsPremium(false);\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      if (currentUser && isPremium) {\n        // lol fooled u eslint\n      }\n      if (user != null) {\n        checkIfUserIsPremium(user, isUserPremium);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    const storedTheme = JSON.parse(localStorage.getItem('timer-theme'));\n    if (storedTheme) {\n      setTimerTheme(\n        generateGradientTheme(timerTheme.color, colorMode, {\n          image: storedTheme.bgImage,\n          random: storedTheme.bgInfo.random,\n          custom_url: storedTheme.bgInfo.custom_url\n        })\n      );\n    }\n  }, [colorMode, timerTheme.color]);\n\n  const content = (\n    <Container centerContent>\n      <Header\n        theme={timerTheme}\n        setTheme={setTimerTheme}\n        isPremium={isPremium}\n      />\n      <Timer theme={timerTheme} />\n      <Tasks theme={timerTheme} />\n    </Container>\n  );\n\n  const noBgImage = (\n    <Box\n      width=\"100vw\"\n      height=\"maxContent\"\n      overflow=\"hidden\"\n      minH=\"100vh\"\n      bgGradient={\n        colorMode === 'light'\n          ? 'linear(to-bl, #F5F5F5, #FFFFFF)'\n          : 'linear(to-bl, #121417, #2B2E36)'\n      }>\n      {content}\n    </Box>\n  );\n\n  const withBgRandomImage = (\n    <Box\n      width=\"100vw\"\n      minH=\"100vh\"\n      _before={{\n        bgImage: `url('${timerTheme.bgInfo.random_url}')`,\n        bgAttachment: 'fixed',\n        bgSize: 'cover',\n        bgRepeat: 'no-repeat',\n        height: '100%',\n        left: 0,\n        position: 'fixed',\n        top: 0,\n        width: '100%',\n        willChange: 'transform',\n        content: \"''\",\n        zIndex: -1\n      }}>\n      {content}\n    </Box>\n  );\n\n  const withBgCustomImage = (\n    <Box\n      width=\"100vw\"\n      height=\"maxContent\"\n      minH=\"100vh\"\n      _before={{\n        bgImage: `url('${timerTheme.bgInfo.custom_url}')`,\n        bgAttachment: 'fixed',\n        bgSize: 'cover',\n        bgRepeat: 'no-repeat',\n        height: '100%',\n        left: 0,\n        position: 'fixed',\n        top: 0,\n        width: '100%',\n        willChange: 'transform',\n        content: \"''\",\n        zIndex: -1\n      }}>\n      {content}\n    </Box>\n  );\n  let displayedTimer = <div />;\n\n  if (timerTheme.bgImage) {\n    if (timerTheme.bgInfo.random) {\n      displayedTimer = withBgRandomImage;\n    } else {\n      displayedTimer = withBgCustomImage;\n    }\n  } else {\n    displayedTimer = noBgImage;\n  }\n  return displayedTimer;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ChakraProvider, CSSReset, extendTheme } from '@chakra-ui/react';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false\n};\n\nconst theme = extendTheme({ config });\n\nReactDOM.render(\n  <React.StrictMode>\n    <CSSReset />\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}